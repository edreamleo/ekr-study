# .gitignore for ekr-study\manim

# Part 1: manim

media/


# Part 2: Python

# Byte-compiled / optimized / DLL files
profile.txt
__pycache__/
.mypy_cache/
mypy_cache/
.dmypy.json
.cache/
*.bak
*.py[cod]
*.history
*.orig

# Build logs
build_log.txt
inspect_wheel.txt

# Other programs
leoProfile
leo/.vscode/
.vscode/

# PyInstaller folders.
/build/
/dist/

# The wax_off script uses the mypy_stub folder, but
# eventually all stub (.pyi) files move to the same folder as their corresponding .py files
/mypy_stubs/
# Don't add the helper directories.
# mypy_stubs/3.*/
# mypy_stubs/*.txt

# Transcrypt folder.
__target__

# .db files
*.db

# Per user stuff
.coverage
htmlcov/
.gitconfig
.viminfo
.leo
*.leo_db
.leo_shadow

# C extensions
*.so

# Distribution / packaging
.Python
env/
develop-eggs/
downloads/
eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg
.eggs/
pip-wheel-metadata/

# Test results
/.pytest_cache/

./MANIFEST
*.exe
*.o
*.~*
*~
*.tmp
*.pyc
*.pyo
*Thumbs.db
*.zip
*.*.swp # vim swap files
./*.zip
./*.exe

# Part 2: Rust: Originally generated by Cargo
# will have compiled files and executables

debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/